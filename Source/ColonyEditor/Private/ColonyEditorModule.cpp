// Fill out your copyright notice in the Description page of Project Settings.

#include "ColonyEditorModule.h"
#include "Plan/Stage.h"
#include <KismetEditorUtilities.h>
#include <ISettingsModule.h>
#include <ISettingsContainer.h>
#include "Settings/ColonyAISettings.h"
#include <ISettingsSection.h>

IMPLEMENT_MODULE(FColonyEditorModule, ColonyEditor);
DEFINE_LOG_CATEGORY(ColonyEditorLog)

void FColonyEditorModule::StartupModule()
{
	UE_LOG(ColonyEditorLog, Log, TEXT("ColonyEditor: Module Started"));

	PrepareAutoGeneratedDefaultEvents();
	RegisterUnmutableSettings();
}

void FColonyEditorModule::ShutdownModule()
{
	UE_LOG(ColonyEditorLog, Warning, TEXT("ColonyEditor: Module Shutdown"));

	FKismetEditorUtilities::UnregisterAutoBlueprintNodeCreation(this);
	
	UnregisterUnmutableSettings();
}

void FColonyEditorModule::PrepareAutoGeneratedDefaultEvents()
{
	RegisterDefaultEvent(UStage, Start);
	RegisterDefaultEvent(UStage, OnPlanTick);
}

void FColonyEditorModule::RegisterUnmutableSettings()
{
	if (ISettingsModule* SettingsModule = FModuleManager::GetModulePtr<ISettingsModule>("Settings"))
	{
		ISettingsContainerPtr SettingsContainer = SettingsModule->GetContainer("Project");

		SettingsContainer->DescribeCategory("Colony Settings", FText::FromString("Colony Settings"), FText::FromString("Base settings for all Colony specific settings"));

		ISettingsSectionPtr AISection = SettingsModule->RegisterSettings("Project", "Colony Settings", "General", FText::FromString("Colony AI Settings"), FText::FromString("Base settings for all Colony AI"), GetMutableDefault<UColonyAISettings>());

		if (AISection.IsValid())
		{
			AISection->OnModified().BindRaw(this, &FColonyEditorModule::HandleSaved);
		}

	}
}

void FColonyEditorModule::UnregisterUnmutableSettings()
{
	if (ISettingsModule* SettingsModule = FModuleManager::GetModulePtr<ISettingsModule>("Settings"))
	{
		SettingsModule->UnregisterSettings("Project", "Colony Settings", "General");
	}
}

bool FColonyEditorModule::HandleSaved()
{
	UColonyAISettings* Settings = GetMutableDefault<UColonyAISettings>();
	Settings->SaveConfig();

	return true;
}
